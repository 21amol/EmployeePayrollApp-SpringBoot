2022-2022-05 11:09 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 9316 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 11:09 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 11:09 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 11:09 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 11:09 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 11:09 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 5.141 seconds (JVM running for 6.943)
2022-2022-05 11:09 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 11:11 [WARN][http-nio-8080-exec-1][o.s.w.s.m.s.DefaultHandlerExceptionResolver:208] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String "12 3 2020": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '12 3 2020' could not be parsed at index 0; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String "12 3 2020": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '12 3 2020' could not be parsed at index 0<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 5, column: 17] (through reference chain: com.example.employeepayrollappspringboot.DTO.EmployeePayrollDTO["startDate"])]
2022-2022-05 11:12 [WARN][http-nio-8080-exec-4][o.s.w.s.m.s.DefaultHandlerExceptionResolver:208] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `java.util.ArrayList` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('hr'); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `java.util.ArrayList` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('hr')<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 6, column: 18] (through reference chain: com.example.employeepayrollappspringboot.DTO.EmployeePayrollDTO["department"])]
2022-2022-05 11:16 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 3464 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 11:16 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 11:16 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 11:16 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 11:16 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 11:16 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 4.715 seconds (JVM running for 6.036)
2022-2022-05 11:16 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 11:17 [WARN][http-nio-8080-exec-2][o.s.w.s.m.s.DefaultHandlerExceptionResolver:208] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String "10-03-2020": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '10-03-2020' could not be parsed at index 2; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String "10-03-2020": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '10-03-2020' could not be parsed at index 2<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 5, column: 17] (through reference chain: com.example.employeepayrollappspringboot.DTO.EmployeePayrollDTO["startDate"])]
2022-2022-05 11:18 [WARN][http-nio-8080-exec-4][o.s.w.s.m.s.DefaultHandlerExceptionResolver:208] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String "10 03 2020": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '10 03 2020' could not be parsed at index 3; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String "10 03 2020": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '10 03 2020' could not be parsed at index 3<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 5, column: 17] (through reference chain: com.example.employeepayrollappspringboot.DTO.EmployeePayrollDTO["startDate"])]
2022-2022-05 11:19 [WARN][http-nio-8080-exec-5][o.s.w.s.m.s.DefaultHandlerExceptionResolver:208] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String "10 03 2020": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '10 03 2020' could not be parsed at index 3; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String "10 03 2020": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '10 03 2020' could not be parsed at index 3<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 5, column: 17] (through reference chain: com.example.employeepayrollappspringboot.DTO.EmployeePayrollDTO["startDate"])]
2022-2022-05 11:24 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 6656 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 11:24 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 11:24 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 11:24 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 11:24 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 11:24 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 4.894 seconds (JVM running for 6.303)
2022-2022-05 11:24 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 11:24 [WARN][http-nio-8080-exec-2][o.s.w.s.m.s.DefaultHandlerExceptionResolver:208] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `java.util.ArrayList` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('hr'); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `java.util.ArrayList` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('hr')<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 6, column: 18] (through reference chain: com.example.employeepayrollappspringboot.DTO.EmployeePayrollDTO["department"])]
2022-2022-05 11:26 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 2060 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 11:26 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 11:26 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 11:26 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 11:26 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 11:26 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 4.608 seconds (JVM running for 5.792)
2022-2022-05 11:26 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 11:27 [WARN][http-nio-8080-exec-2][o.s.w.s.m.s.DefaultHandlerExceptionResolver:208] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `java.util.ArrayList` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('hr'); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `java.util.ArrayList` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('hr')<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 7, column: 18] (through reference chain: com.example.employeepayrollappspringboot.DTO.EmployeePayrollDTO["department"])]
2022-2022-05 11:32 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 11220 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 11:32 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 11:32 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 11:32 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 11:32 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 11:32 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 4.606 seconds (JVM running for 5.842)
2022-2022-05 11:32 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 11:32 [ERROR][http-nio-8080-exec-1][o.a.c.c.C.[.[.[.[dispatcherServlet]:175] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException: text] with root cause
java.lang.NullPointerException: text
	at java.base/java.util.Objects.requireNonNull(Objects.java:233)
	at java.base/java.time.format.DateTimeFormatter.parse(DateTimeFormatter.java:1951)
	at java.base/java.time.LocalDate.parse(LocalDate.java:430)
	at java.base/java.time.LocalDate.parse(LocalDate.java:415)
	at com.example.employeepayrollappspringboot.Model.EmployeePayrollData.<init>(EmployeePayrollData.java:29)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.addEmployeePayrollData(EmployeePayrollServices.java:30)
	at com.example.employeepayrollappspringboot.controller.EmployeePayrollController.addEmployeePayrollData(EmployeePayrollController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-2022-05 11:33 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 5316 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 11:33 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 11:33 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 11:34 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 11:34 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 11:34 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 4.731 seconds (JVM running for 5.82)
2022-2022-05 11:34 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 11:37 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 10952 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 11:37 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 11:37 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 11:37 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 11:37 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 11:37 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 5.726 seconds (JVM running for 7.493)
2022-2022-05 11:37 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 11:38 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 10844 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 11:38 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 11:38 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 11:38 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 11:38 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 11:38 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 4.655 seconds (JVM running for 5.857)
2022-2022-05 11:38 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 11:53 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 3240 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 11:53 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 11:53 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 11:53 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 11:53 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 11:53 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 4.786 seconds (JVM running for 6.123)
2022-2022-05 11:53 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 11:53 [ERROR][http-nio-8080-exec-2][o.a.c.c.C.[.[.[.[dispatcherServlet]:175] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.PastOrPresent' validating type 'java.lang.String'. Check configuration for 'joiningDate'] with root cause
javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.PastOrPresent' validating type 'java.lang.String'. Check configuration for 'joiningDate'
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getExceptionForNullValidator(ConstraintTree.java:116)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getInitializedConstraintValidator(ConstraintTree.java:162)
	at org.hibernate.validator.internal.engine.constraintvalidation.SimpleConstraintTree.validateConstraints(SimpleConstraintTree.java:54)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:75)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.doValidateConstraint(MetaConstraint.java:130)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:123)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateMetaConstraint(ValidatorImpl.java:555)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForSingleDefaultGroupElement(ValidatorImpl.java:518)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForDefaultGroup(ValidatorImpl.java:488)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:450)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:400)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:172)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.validate(SpringValidatorAdapter.java:109)
	at org.springframework.boot.autoconfigure.validation.ValidatorAdapter.validate(ValidatorAdapter.java:66)
	at org.springframework.validation.DataBinder.validate(DataBinder.java:933)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.validateIfApplicable(AbstractMessageConverterMethodArgumentResolver.java:250)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:139)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-2022-05 11:55 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 5468 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 11:55 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 11:55 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 11:55 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 11:55 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 11:55 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 4.679 seconds (JVM running for 5.884)
2022-2022-05 11:55 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 11:56 [ERROR][http-nio-8080-exec-1][o.a.c.c.C.[.[.[.[dispatcherServlet]:175] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.PastOrPresent' validating type 'java.lang.String'. Check configuration for 'joiningDate'] with root cause
javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.PastOrPresent' validating type 'java.lang.String'. Check configuration for 'joiningDate'
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getExceptionForNullValidator(ConstraintTree.java:116)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getInitializedConstraintValidator(ConstraintTree.java:162)
	at org.hibernate.validator.internal.engine.constraintvalidation.SimpleConstraintTree.validateConstraints(SimpleConstraintTree.java:54)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:75)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.doValidateConstraint(MetaConstraint.java:130)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:123)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateMetaConstraint(ValidatorImpl.java:555)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForSingleDefaultGroupElement(ValidatorImpl.java:518)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForDefaultGroup(ValidatorImpl.java:488)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:450)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:400)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:172)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.validate(SpringValidatorAdapter.java:109)
	at org.springframework.boot.autoconfigure.validation.ValidatorAdapter.validate(ValidatorAdapter.java:66)
	at org.springframework.validation.DataBinder.validate(DataBinder.java:933)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.validateIfApplicable(AbstractMessageConverterMethodArgumentResolver.java:250)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:139)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-2022-05 11:56 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 3920 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 11:56 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 11:56 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 11:57 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 11:57 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 11:57 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 4.407 seconds (JVM running for 5.495)
2022-2022-05 11:57 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 11:57 [WARN][http-nio-8080-exec-2][o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver:208] Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.employeepayrollappspringboot.DTO.ResponseDTO> com.example.employeepayrollappspringboot.controller.EmployeePayrollController.addEmployeePayrollData(com.example.employeepayrollappspringboot.DTO.EmployeePayrollDTO): [Field error in object 'employeePayrollDTO' on field 'gender': rejected value [m]; codes [Pattern.employeePayrollDTO.gender,Pattern.gender,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [employeePayrollDTO.gender,gender]; arguments []; default message [gender],[Ljavax.validation.constraints.Pattern$Flag;@69608e58,male|female]; default message [Gender should be Male or Female]] ]
2022-2022-05 11:59 [WARN][http-nio-8080-exec-3][o.s.w.s.m.s.DefaultHandlerExceptionResolver:208] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character (',' (code 44)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character (',' (code 44)): expected a value<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 6, column: 13]]
2022-2022-05 12:00 [WARN][http-nio-8080-exec-6][o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver:208] Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.employeepayrollappspringboot.DTO.ResponseDTO> com.example.employeepayrollappspringboot.controller.EmployeePayrollController.addEmployeePayrollData(com.example.employeepayrollappspringboot.DTO.EmployeePayrollDTO) with 2 errors: [Field error in object 'employeePayrollDTO' on field 'note': rejected value []; codes [NotEmpty.employeePayrollDTO.note,NotEmpty.note,NotEmpty]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [employeePayrollDTO.note,note]; arguments []; default message [note]]; default message [Note cannot be Empty]] [Field error in object 'employeePayrollDTO' on field 'gender': rejected value [m]; codes [Pattern.employeePayrollDTO.gender,Pattern.gender,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [employeePayrollDTO.gender,gender]; arguments []; default message [gender],[Ljavax.validation.constraints.Pattern$Flag;@69608e58,male|female]; default message [Gender should be Male or Female]] ]
2022-2022-05 12:00 [WARN][http-nio-8080-exec-8][o.s.w.s.m.s.DefaultHandlerExceptionResolver:208] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): expected a value; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): expected a value<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 2]]
2022-2022-05 12:00 [WARN][http-nio-8080-exec-9][o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver:208] Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.employeepayrollappspringboot.DTO.ResponseDTO> com.example.employeepayrollappspringboot.controller.EmployeePayrollController.addEmployeePayrollData(com.example.employeepayrollappspringboot.DTO.EmployeePayrollDTO) with 2 errors: [Field error in object 'employeePayrollDTO' on field 'gender': rejected value [m]; codes [Pattern.employeePayrollDTO.gender,Pattern.gender,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [employeePayrollDTO.gender,gender]; arguments []; default message [gender],[Ljavax.validation.constraints.Pattern$Flag;@69608e58,male|female]; default message [Gender should be Male or Female]] [Field error in object 'employeePayrollDTO' on field 'note': rejected value []; codes [NotEmpty.employeePayrollDTO.note,NotEmpty.note,NotEmpty]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [employeePayrollDTO.note,note]; arguments []; default message [note]]; default message [Note cannot be Empty]] ]
2022-2022-05 12:02 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 252 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 12:02 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 12:02 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 12:02 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 12:02 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 12:02 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 4.919 seconds (JVM running for 6.225)
2022-2022-05 12:02 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 12:03 [WARN][http-nio-8080-exec-1][o.s.w.s.m.s.DefaultHandlerExceptionResolver:208] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String "10 feb 2020": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '10 feb 2020' could not be parsed at index 3; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String "10 feb 2020": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '10 feb 2020' could not be parsed at index 3<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 5, column: 19] (through reference chain: com.example.employeepayrollappspringboot.DTO.EmployeePayrollDTO["joiningDate"])]
2022-2022-05 12:04 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 4792 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 12:04 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 12:04 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 12:04 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 12:04 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 12:04 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 4.405 seconds (JVM running for 5.612)
2022-2022-05 12:04 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 12:04 [WARN][http-nio-8080-exec-2][o.s.w.s.m.s.DefaultHandlerExceptionResolver:208] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String "10 feb 2020": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '10 feb 2020' could not be parsed at index 3; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String "10 feb 2020": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '10 feb 2020' could not be parsed at index 3<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 5, column: 19] (through reference chain: com.example.employeepayrollappspringboot.DTO.EmployeePayrollDTO["joiningDate"])]
2022-2022-05 12:05 [ERROR][http-nio-8080-exec-4][o.a.c.c.C.[.[.[.[dispatcherServlet]:175] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.NotBlank' validating type 'java.time.LocalDate'. Check configuration for 'joiningDate'] with root cause
javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.NotBlank' validating type 'java.time.LocalDate'. Check configuration for 'joiningDate'
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getExceptionForNullValidator(ConstraintTree.java:116)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getInitializedConstraintValidator(ConstraintTree.java:162)
	at org.hibernate.validator.internal.engine.constraintvalidation.SimpleConstraintTree.validateConstraints(SimpleConstraintTree.java:54)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:75)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.doValidateConstraint(MetaConstraint.java:130)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:123)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateMetaConstraint(ValidatorImpl.java:555)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForSingleDefaultGroupElement(ValidatorImpl.java:518)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForDefaultGroup(ValidatorImpl.java:488)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:450)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:400)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:172)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.validate(SpringValidatorAdapter.java:109)
	at org.springframework.boot.autoconfigure.validation.ValidatorAdapter.validate(ValidatorAdapter.java:66)
	at org.springframework.validation.DataBinder.validate(DataBinder.java:933)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.validateIfApplicable(AbstractMessageConverterMethodArgumentResolver.java:250)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:139)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-2022-05 12:06 [ERROR][http-nio-8080-exec-6][o.a.c.c.C.[.[.[.[dispatcherServlet]:175] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.NotBlank' validating type 'java.time.LocalDate'. Check configuration for 'joiningDate'] with root cause
javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.NotBlank' validating type 'java.time.LocalDate'. Check configuration for 'joiningDate'
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getExceptionForNullValidator(ConstraintTree.java:116)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getInitializedConstraintValidator(ConstraintTree.java:162)
	at org.hibernate.validator.internal.engine.constraintvalidation.SimpleConstraintTree.validateConstraints(SimpleConstraintTree.java:54)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:75)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.doValidateConstraint(MetaConstraint.java:130)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:123)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateMetaConstraint(ValidatorImpl.java:555)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForSingleDefaultGroupElement(ValidatorImpl.java:518)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForDefaultGroup(ValidatorImpl.java:488)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:450)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:400)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:172)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.validate(SpringValidatorAdapter.java:109)
	at org.springframework.boot.autoconfigure.validation.ValidatorAdapter.validate(ValidatorAdapter.java:66)
	at org.springframework.validation.DataBinder.validate(DataBinder.java:933)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.validateIfApplicable(AbstractMessageConverterMethodArgumentResolver.java:250)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:139)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-2022-05 12:07 [ERROR][http-nio-8080-exec-8][o.a.c.c.C.[.[.[.[dispatcherServlet]:175] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.NotBlank' validating type 'java.time.LocalDate'. Check configuration for 'joiningDate'] with root cause
javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.NotBlank' validating type 'java.time.LocalDate'. Check configuration for 'joiningDate'
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getExceptionForNullValidator(ConstraintTree.java:116)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getInitializedConstraintValidator(ConstraintTree.java:162)
	at org.hibernate.validator.internal.engine.constraintvalidation.SimpleConstraintTree.validateConstraints(SimpleConstraintTree.java:54)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:75)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.doValidateConstraint(MetaConstraint.java:130)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:123)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateMetaConstraint(ValidatorImpl.java:555)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForSingleDefaultGroupElement(ValidatorImpl.java:518)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForDefaultGroup(ValidatorImpl.java:488)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:450)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:400)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:172)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.validate(SpringValidatorAdapter.java:109)
	at org.springframework.boot.autoconfigure.validation.ValidatorAdapter.validate(ValidatorAdapter.java:66)
	at org.springframework.validation.DataBinder.validate(DataBinder.java:933)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.validateIfApplicable(AbstractMessageConverterMethodArgumentResolver.java:250)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:139)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-2022-05 12:08 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 2284 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 12:08 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 12:08 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 12:08 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 12:08 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 12:08 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 4.675 seconds (JVM running for 6.017)
2022-2022-05 12:08 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 12:08 [ERROR][http-nio-8080-exec-1][o.a.c.c.C.[.[.[.[dispatcherServlet]:175] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.NotBlank' validating type 'java.time.LocalDate'. Check configuration for 'joiningDate'] with root cause
javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.NotBlank' validating type 'java.time.LocalDate'. Check configuration for 'joiningDate'
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getExceptionForNullValidator(ConstraintTree.java:116)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getInitializedConstraintValidator(ConstraintTree.java:162)
	at org.hibernate.validator.internal.engine.constraintvalidation.SimpleConstraintTree.validateConstraints(SimpleConstraintTree.java:54)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:75)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.doValidateConstraint(MetaConstraint.java:130)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:123)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateMetaConstraint(ValidatorImpl.java:555)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForSingleDefaultGroupElement(ValidatorImpl.java:518)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForDefaultGroup(ValidatorImpl.java:488)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:450)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:400)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:172)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.validate(SpringValidatorAdapter.java:109)
	at org.springframework.boot.autoconfigure.validation.ValidatorAdapter.validate(ValidatorAdapter.java:66)
	at org.springframework.validation.DataBinder.validate(DataBinder.java:933)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.validateIfApplicable(AbstractMessageConverterMethodArgumentResolver.java:250)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:139)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-2022-05 12:10 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 9456 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 12:10 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 12:10 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 12:10 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 12:10 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 12:10 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 4.304 seconds (JVM running for 5.531)
2022-2022-05 12:10 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 12:10 [ERROR][http-nio-8080-exec-2][o.a.c.c.C.[.[.[.[dispatcherServlet]:175] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.NotBlank' validating type 'java.time.LocalDate'. Check configuration for 'joiningDate'] with root cause
javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.NotBlank' validating type 'java.time.LocalDate'. Check configuration for 'joiningDate'
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getExceptionForNullValidator(ConstraintTree.java:116)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getInitializedConstraintValidator(ConstraintTree.java:162)
	at org.hibernate.validator.internal.engine.constraintvalidation.SimpleConstraintTree.validateConstraints(SimpleConstraintTree.java:54)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:75)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.doValidateConstraint(MetaConstraint.java:130)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:123)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateMetaConstraint(ValidatorImpl.java:555)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForSingleDefaultGroupElement(ValidatorImpl.java:518)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForDefaultGroup(ValidatorImpl.java:488)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:450)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:400)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:172)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.validate(SpringValidatorAdapter.java:109)
	at org.springframework.boot.autoconfigure.validation.ValidatorAdapter.validate(ValidatorAdapter.java:66)
	at org.springframework.validation.DataBinder.validate(DataBinder.java:933)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.validateIfApplicable(AbstractMessageConverterMethodArgumentResolver.java:250)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:139)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-2022-05 12:12 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 3396 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 12:12 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 12:12 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 12:12 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 12:12 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 12:12 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 4.284 seconds (JVM running for 5.42)
2022-2022-05 12:12 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 12:13 [ERROR][http-nio-8080-exec-2][o.a.c.c.C.[.[.[.[dispatcherServlet]:175] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.NotBlank' validating type 'java.time.LocalDate'. Check configuration for 'joiningDate'] with root cause
javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.NotBlank' validating type 'java.time.LocalDate'. Check configuration for 'joiningDate'
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getExceptionForNullValidator(ConstraintTree.java:116)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getInitializedConstraintValidator(ConstraintTree.java:162)
	at org.hibernate.validator.internal.engine.constraintvalidation.SimpleConstraintTree.validateConstraints(SimpleConstraintTree.java:54)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:75)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.doValidateConstraint(MetaConstraint.java:130)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:123)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateMetaConstraint(ValidatorImpl.java:555)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForSingleDefaultGroupElement(ValidatorImpl.java:518)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForDefaultGroup(ValidatorImpl.java:488)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:450)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:400)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:172)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.validate(SpringValidatorAdapter.java:109)
	at org.springframework.boot.autoconfigure.validation.ValidatorAdapter.validate(ValidatorAdapter.java:66)
	at org.springframework.validation.DataBinder.validate(DataBinder.java:933)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.validateIfApplicable(AbstractMessageConverterMethodArgumentResolver.java:250)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:139)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-2022-05 12:15 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 8300 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 12:15 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 12:15 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 12:15 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 12:15 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 12:15 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 4.783 seconds (JVM running for 6.189)
2022-2022-05 12:15 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 12:15 [ERROR][http-nio-8080-exec-1][o.a.c.c.C.[.[.[.[dispatcherServlet]:175] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.NotBlank' validating type 'java.time.LocalDate'. Check configuration for 'joiningDate'] with root cause
javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.NotBlank' validating type 'java.time.LocalDate'. Check configuration for 'joiningDate'
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getExceptionForNullValidator(ConstraintTree.java:116)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getInitializedConstraintValidator(ConstraintTree.java:162)
	at org.hibernate.validator.internal.engine.constraintvalidation.SimpleConstraintTree.validateConstraints(SimpleConstraintTree.java:54)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:75)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.doValidateConstraint(MetaConstraint.java:130)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:123)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateMetaConstraint(ValidatorImpl.java:555)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForSingleDefaultGroupElement(ValidatorImpl.java:518)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForDefaultGroup(ValidatorImpl.java:488)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:450)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:400)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:172)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.validate(SpringValidatorAdapter.java:109)
	at org.springframework.boot.autoconfigure.validation.ValidatorAdapter.validate(ValidatorAdapter.java:66)
	at org.springframework.validation.DataBinder.validate(DataBinder.java:933)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.validateIfApplicable(AbstractMessageConverterMethodArgumentResolver.java:250)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:139)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-2022-05 12:17 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 4356 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 12:17 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 12:17 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 12:17 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 12:17 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 12:17 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 4.718 seconds (JVM running for 5.87)
2022-2022-05 12:17 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 12:25 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 7140 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 12:25 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 12:25 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 12:25 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 12:25 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 12:25 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 4.73 seconds (JVM running for 6.011)
2022-2022-05 12:25 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 12:25 [ERROR][http-nio-8080-exec-2][o.a.c.c.C.[.[.[.[dispatcherServlet]:175] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.NotBlank' validating type 'java.time.LocalDate'. Check configuration for 'joiningDate'] with root cause
javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.NotBlank' validating type 'java.time.LocalDate'. Check configuration for 'joiningDate'
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getExceptionForNullValidator(ConstraintTree.java:116)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getInitializedConstraintValidator(ConstraintTree.java:162)
	at org.hibernate.validator.internal.engine.constraintvalidation.SimpleConstraintTree.validateConstraints(SimpleConstraintTree.java:54)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:75)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.doValidateConstraint(MetaConstraint.java:130)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:123)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateMetaConstraint(ValidatorImpl.java:555)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForSingleDefaultGroupElement(ValidatorImpl.java:518)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForDefaultGroup(ValidatorImpl.java:488)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:450)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:400)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:172)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.validate(SpringValidatorAdapter.java:109)
	at org.springframework.boot.autoconfigure.validation.ValidatorAdapter.validate(ValidatorAdapter.java:66)
	at org.springframework.validation.DataBinder.validate(DataBinder.java:933)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.validateIfApplicable(AbstractMessageConverterMethodArgumentResolver.java:250)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:139)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-2022-05 12:29 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 8156 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 12:29 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 12:29 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 12:29 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 12:29 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 12:29 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 4.332 seconds (JVM running for 5.57)
2022-2022-05 12:29 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 12:29 [WARN][http-nio-8080-exec-1][o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver:208] Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.employeepayrollappspringboot.DTO.ResponseDTO> com.example.employeepayrollappspringboot.controller.EmployeePayrollController.addEmployeePayrollData(com.example.employeepayrollappspringboot.DTO.EmployeePayrollDTO): [Field error in object 'employeePayrollDTO' on field 'gender': rejected value [Male]; codes [Pattern.employeePayrollDTO.gender,Pattern.gender,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [employeePayrollDTO.gender,gender]; arguments []; default message [gender],[Ljavax.validation.constraints.Pattern$Flag;@2143bc64,male|female]; default message [Gender should be Male or Female]] ]
2022-2022-05 12:29 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 9928 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 12:29 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 12:29 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 12:29 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 12:29 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 12:29 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 4.458 seconds (JVM running for 5.606)
2022-2022-05 12:29 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 12:30 [DEBUG][http-nio-8080-exec-2][c.e.e.c.EmployeePayrollController:40] Employee DTO :EmployeePayrollDTO(name=Ronaldo, salary=4000, gender=Male, joiningDate=2020-02-10, note=H, profilePic=null, department=[hr])
2022-2022-05 12:30 [WARN][http-nio-8080-exec-3][o.s.w.s.m.s.DefaultHandlerExceptionResolver:208] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String "Feb 10 2020": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text 'Feb 10 2020' could not be parsed at index 0; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String "Feb 10 2020": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text 'Feb 10 2020' could not be parsed at index 0<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 5, column: 19] (through reference chain: com.example.employeepayrollappspringboot.DTO.EmployeePayrollDTO["joiningDate"])]
2022-2022-05 12:37 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 2544 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 12:37 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 12:37 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 12:37 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 12:37 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 12:37 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 4.621 seconds (JVM running for 5.886)
2022-2022-05 12:37 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 12:37 [WARN][http-nio-8080-exec-2][o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver:208] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String "Feb 10 2020": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text 'Feb 10 2020' could not be parsed at index 0; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String "Feb 10 2020": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text 'Feb 10 2020' could not be parsed at index 0<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 5, column: 19] (through reference chain: com.example.employeepayrollappspringboot.DTO.EmployeePayrollDTO["joiningDate"])]
2022-2022-05 13:36 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 10940 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 13:36 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 13:36 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 13:36 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 13:36 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 13:36 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 5.99 seconds (JVM running for 7.507)
2022-2022-05 13:36 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 13:38 [WARN][http-nio-8080-exec-1][o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver:208] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String "1 01 2021": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '1 01 2021' could not be parsed at index 0; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String "1 01 2021": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '1 01 2021' could not be parsed at index 0<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 5, column: 19] (through reference chain: com.example.employeepayrollappspringboot.DTO.EmployeePayrollDTO["joiningDate"])]
2022-2022-05 13:39 [WARN][http-nio-8080-exec-3][o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver:208] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String "01 01 2021": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '01 01 2021' could not be parsed at index 3; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String "01 01 2021": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '01 01 2021' could not be parsed at index 3<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 5, column: 19] (through reference chain: com.example.employeepayrollappspringboot.DTO.EmployeePayrollDTO["joiningDate"])]
2022-2022-05 13:39 [DEBUG][http-nio-8080-exec-6][c.e.e.c.EmployeePayrollController:40] Employee DTO :EmployeePayrollDTO(name=Ronaldo, salary=4000, gender=Male, joiningDate=2021-01-01, note=Score Goals, profilePic=null, department=[RW,LW])
2022-2022-05 13:41 [DEBUG][http-nio-8080-exec-2][c.e.e.c.EmployeePayrollController:40] Employee DTO :EmployeePayrollDTO(name=Gea, salary=1000, gender=Male, joiningDate=2021-01-01, note=Save Goals, profilePic=null, department=[GK])
2022-2022-05 13:42 [DEBUG][http-nio-8080-exec-1][c.e.e.c.EmployeePayrollController:40] Employee DTO :EmployeePayrollDTO(name=Puyol, salary=2000, gender=Male, joiningDate=2021-02-01, note=Defend Goals, profilePic=null, department=[CB])
2022-2022-05 14:52 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 10620 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 14:52 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 14:52 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 14:52 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 14:52 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 14:52 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 5.924 seconds (JVM running for 7.271)
2022-2022-05 14:52 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 14:56 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 7944 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 14:56 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 14:56 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 14:56 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 14:56 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 14:56 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 5.735 seconds (JVM running for 7.0)
2022-2022-05 14:56 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 14:56 [ERROR][http-nio-8080-exec-2][o.a.c.c.C.[.[.[.[dispatcherServlet]:175] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed; nested exception is java.lang.StackOverflowError] with root cause
java.lang.StackOverflowError: null
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:467)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:595)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:382)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy111.findById(Unknown Source)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.getEmployeePayrollDataById(EmployeePayrollServices.java:25)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:36)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:37)
2022-2022-05 15:20 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 1864 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 15:20 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 15:20 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 15:20 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 15:20 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 15:20 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 6.757 seconds (JVM running for 8.161)
2022-2022-05 15:20 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 15:24 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 6480 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 15:24 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 15:24 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 15:24 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 15:24 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 15:24 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 8.38 seconds (JVM running for 10.108)
2022-2022-05 15:24 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 15:24 [ERROR][http-nio-8080-exec-1][o.a.c.c.C.[.[.[.[dispatcherServlet]:175] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: Entity must not be null.; nested exception is java.lang.IllegalArgumentException: Entity must not be null.] with root cause
java.lang.IllegalArgumentException: Entity must not be null.
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:663)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:639)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy111.save(Unknown Source)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:46)
	at com.example.employeepayrollappspringboot.controller.EmployeePayrollController.updateEmployeePayrollData(EmployeePayrollController.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-2022-05 15:25 [ERROR][http-nio-8080-exec-5][o.a.c.c.C.[.[.[.[dispatcherServlet]:175] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: Entity must not be null.; nested exception is java.lang.IllegalArgumentException: Entity must not be null.] with root cause
java.lang.IllegalArgumentException: Entity must not be null.
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:663)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:639)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy111.save(Unknown Source)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:46)
	at com.example.employeepayrollappspringboot.controller.EmployeePayrollController.updateEmployeePayrollData(EmployeePayrollController.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-2022-05 15:25 [ERROR][http-nio-8080-exec-7][o.a.c.c.C.[.[.[.[dispatcherServlet]:175] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: Entity must not be null.; nested exception is java.lang.IllegalArgumentException: Entity must not be null.] with root cause
java.lang.IllegalArgumentException: Entity must not be null.
	at org.springframework.util.Assert.notNull(Assert.java:201)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:663)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:639)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy111.save(Unknown Source)
	at com.example.employeepayrollappspringboot.service.EmployeePayrollServices.updateEmployeeData(EmployeePayrollServices.java:46)
	at com.example.employeepayrollappspringboot.controller.EmployeePayrollController.updateEmployeePayrollData(EmployeePayrollController.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-2022-05 15:32 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 4500 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 15:32 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 15:32 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 15:32 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 15:32 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 15:32 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 7.204 seconds (JVM running for 8.738)
2022-2022-05 15:32 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 15:34 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 7728 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 15:34 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 15:34 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 15:34 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 15:34 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 15:34 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 6.455 seconds (JVM running for 7.829)
2022-2022-05 15:34 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 15:58 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 3968 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 15:58 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 15:58 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 15:58 [WARN][restartedMain][o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext:591] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'SELECT * FROM Employee_Payroll, Employee_Department WHERE eemp_id = id AND department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'SELECT * FROM Employee_Payroll, Employee_Department WHERE eemp_id = id AND department = :deptarment'!
2022-2022-05 15:58 [ERROR][restartedMain][o.s.b.SpringApplication:824] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'SELECT * FROM Employee_Payroll, Employee_Department WHERE eemp_id = id AND department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'SELECT * FROM Employee_Payroll, Employee_Department WHERE eemp_id = id AND department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.employeepayrollappspringboot.EmployeePayrollAppSpringBootApplication.main(EmployeePayrollAppSpringBootApplication.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'SELECT * FROM Employee_Payroll, Employee_Department WHERE eemp_id = id AND department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'SELECT * FROM Employee_Payroll, Employee_Department WHERE eemp_id = id AND department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'SELECT * FROM Employee_Payroll, Employee_Department WHERE eemp_id = id AND department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'SELECT * FROM Employee_Payroll, Employee_Department WHERE eemp_id = id AND department = :deptarment'!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 39 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'SELECT * FROM Employee_Payroll, Employee_Department WHERE eemp_id = id AND department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'SELECT * FROM Employee_Payroll, Employee_Department WHERE eemp_id = id AND department = :deptarment'!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1061)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:364)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:322)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:328)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 49 common frames omitted
Caused by: java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'SELECT * FROM Employee_Payroll, Employee_Department WHERE eemp_id = id AND department = :deptarment'!
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.assertParameterNamesInAnnotatedQuery(JpaQueryMethod.java:172)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.<init>(JpaQueryMethod.java:139)
	at org.springframework.data.jpa.repository.query.DefaultJpaQueryMethodFactory.build(DefaultJpaQueryMethodFactory.java:44)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:87)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 71 common frames omitted
2022-2022-05 16:01 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 3248 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 16:01 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 16:01 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 16:01 [WARN][restartedMain][o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext:591] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where eemp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where eemp_id = id and department = :deptarment'!
2022-2022-05 16:01 [ERROR][restartedMain][o.s.b.SpringApplication:824] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where eemp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where eemp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.employeepayrollappspringboot.EmployeePayrollAppSpringBootApplication.main(EmployeePayrollAppSpringBootApplication.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where eemp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where eemp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where eemp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where eemp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 39 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where eemp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where eemp_id = id and department = :deptarment'!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1061)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:364)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:322)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:328)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 49 common frames omitted
Caused by: java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where eemp_id = id and department = :deptarment'!
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.assertParameterNamesInAnnotatedQuery(JpaQueryMethod.java:172)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.<init>(JpaQueryMethod.java:139)
	at org.springframework.data.jpa.repository.query.DefaultJpaQueryMethodFactory.build(DefaultJpaQueryMethodFactory.java:44)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:87)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 71 common frames omitted
2022-2022-05 16:02 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 8884 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 16:02 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 16:02 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 16:02 [WARN][restartedMain][o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext:591] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where emp_id = id and department = :deptarment'!
2022-2022-05 16:02 [ERROR][restartedMain][o.s.b.SpringApplication:824] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.employeepayrollappspringboot.EmployeePayrollAppSpringBootApplication.main(EmployeePayrollAppSpringBootApplication.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 39 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where emp_id = id and department = :deptarment'!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1061)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:364)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:322)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:328)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 49 common frames omitted
Caused by: java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where emp_id = id and department = :deptarment'!
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.assertParameterNamesInAnnotatedQuery(JpaQueryMethod.java:172)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.<init>(JpaQueryMethod.java:139)
	at org.springframework.data.jpa.repository.query.DefaultJpaQueryMethodFactory.build(DefaultJpaQueryMethodFactory.java:44)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:87)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 71 common frames omitted
2022-2022-05 16:03 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 9084 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 16:03 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 16:03 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 16:03 [WARN][restartedMain][o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext:591] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
2022-2022-05 16:03 [ERROR][restartedMain][o.s.b.SpringApplication:824] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.employeepayrollappspringboot.EmployeePayrollAppSpringBootApplication.main(EmployeePayrollAppSpringBootApplication.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 39 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1061)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:364)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:322)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:328)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 49 common frames omitted
Caused by: java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.assertParameterNamesInAnnotatedQuery(JpaQueryMethod.java:172)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.<init>(JpaQueryMethod.java:139)
	at org.springframework.data.jpa.repository.query.DefaultJpaQueryMethodFactory.build(DefaultJpaQueryMethodFactory.java:44)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:87)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 71 common frames omitted
2022-2022-05 16:06 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 10948 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 16:06 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 16:06 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 16:06 [WARN][restartedMain][o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext:591] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
2022-2022-05 16:06 [ERROR][restartedMain][o.s.b.SpringApplication:824] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.employeepayrollappspringboot.EmployeePayrollAppSpringBootApplication.main(EmployeePayrollAppSpringBootApplication.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 39 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1061)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:364)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:322)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:328)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 49 common frames omitted
Caused by: java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.assertParameterNamesInAnnotatedQuery(JpaQueryMethod.java:172)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.<init>(JpaQueryMethod.java:139)
	at org.springframework.data.jpa.repository.query.DefaultJpaQueryMethodFactory.build(DefaultJpaQueryMethodFactory.java:44)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:87)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 71 common frames omitted
2022-2022-05 16:09 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 4428 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 16:09 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 16:09 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 16:09 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 16:09 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 16:09 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 7.475 seconds (JVM running for 8.957)
2022-2022-05 16:09 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 16:12 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 3992 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 16:12 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 16:12 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 16:12 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 16:12 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 16:12 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 7.657 seconds (JVM running for 9.332)
2022-2022-05 16:12 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 16:13 [WARN][http-nio-8080-exec-3][o.s.w.s.m.s.DefaultHandlerExceptionResolver:208] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2022-2022-05 16:13 [DEBUG][http-nio-8080-exec-4][c.e.e.c.EmployeePayrollController:40] Employee DTO :EmployeePayrollDTO(name=Messi, salary=2000, gender=Male, joiningDate=2021-02-01, note=Goal Machine, profilePic=null, department=[HR,Sales])
2022-2022-05 16:20 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 11080 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 16:20 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 16:20 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 16:20 [WARN][restartedMain][o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext:591] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
2022-2022-05 16:20 [ERROR][restartedMain][o.s.b.SpringApplication:824] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.employeepayrollappspringboot.EmployeePayrollAppSpringBootApplication.main(EmployeePayrollAppSpringBootApplication.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 39 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1061)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:364)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:322)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:328)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 49 common frames omitted
Caused by: java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.assertParameterNamesInAnnotatedQuery(JpaQueryMethod.java:172)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.<init>(JpaQueryMethod.java:139)
	at org.springframework.data.jpa.repository.query.DefaultJpaQueryMethodFactory.build(DefaultJpaQueryMethodFactory.java:44)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:87)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 71 common frames omitted
2022-2022-05 16:42 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 10800 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 16:42 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 16:42 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 16:42 [WARN][restartedMain][o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext:591] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where emp_id = id and department = :deptarment'!
2022-2022-05 16:42 [ERROR][restartedMain][o.s.b.SpringApplication:824] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.employeepayrollappspringboot.EmployeePayrollAppSpringBootApplication.main(EmployeePayrollAppSpringBootApplication.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 39 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where emp_id = id and department = :deptarment'!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1061)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:364)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:322)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:328)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 49 common frames omitted
Caused by: java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from Employee_Payroll, Employee_Department where emp_id = id and department = :deptarment'!
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.assertParameterNamesInAnnotatedQuery(JpaQueryMethod.java:172)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.<init>(JpaQueryMethod.java:139)
	at org.springframework.data.jpa.repository.query.DefaultJpaQueryMethodFactory.build(DefaultJpaQueryMethodFactory.java:44)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:87)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 71 common frames omitted
2022-2022-05 16:49 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 5276 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 16:49 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 16:49 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 16:49 [WARN][restartedMain][o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext:591] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
2022-2022-05 16:49 [ERROR][restartedMain][o.s.b.SpringApplication:824] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.employeepayrollappspringboot.EmployeePayrollAppSpringBootApplication.main(EmployeePayrollAppSpringBootApplication.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 39 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1061)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:364)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:322)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:328)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 49 common frames omitted
Caused by: java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.assertParameterNamesInAnnotatedQuery(JpaQueryMethod.java:172)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.<init>(JpaQueryMethod.java:139)
	at org.springframework.data.jpa.repository.query.DefaultJpaQueryMethodFactory.build(DefaultJpaQueryMethodFactory.java:44)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:87)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 71 common frames omitted
2022-2022-05 16:55 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 7976 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 16:55 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 16:55 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 16:55 [WARN][restartedMain][o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext:591] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
2022-2022-05 16:55 [ERROR][restartedMain][o.s.b.SpringApplication:824] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.employeepayrollappspringboot.EmployeePayrollAppSpringBootApplication.main(EmployeePayrollAppSpringBootApplication.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 39 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1061)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:364)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:322)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:328)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 49 common frames omitted
Caused by: java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.assertParameterNamesInAnnotatedQuery(JpaQueryMethod.java:172)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.<init>(JpaQueryMethod.java:139)
	at org.springframework.data.jpa.repository.query.DefaultJpaQueryMethodFactory.build(DefaultJpaQueryMethodFactory.java:44)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:87)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 71 common frames omitted
2022-2022-05 16:57 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 9988 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 16:57 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 16:57 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 16:58 [WARN][restartedMain][o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext:591] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
2022-2022-05 16:58 [ERROR][restartedMain][o.s.b.SpringApplication:824] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.employeepayrollappspringboot.EmployeePayrollAppSpringBootApplication.main(EmployeePayrollAppSpringBootApplication.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 39 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1061)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:364)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:322)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:328)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 49 common frames omitted
Caused by: java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.assertParameterNamesInAnnotatedQuery(JpaQueryMethod.java:172)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.<init>(JpaQueryMethod.java:139)
	at org.springframework.data.jpa.repository.query.DefaultJpaQueryMethodFactory.build(DefaultJpaQueryMethodFactory.java:44)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:87)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 71 common frames omitted
2022-2022-05 17:01 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 6848 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 17:01 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 17:01 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 17:01 [WARN][restartedMain][o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext:591] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
2022-2022-05 17:01 [ERROR][restartedMain][o.s.b.SpringApplication:824] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.employeepayrollappspringboot.EmployeePayrollAppSpringBootApplication.main(EmployeePayrollAppSpringBootApplication.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 39 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1061)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:364)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:322)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:328)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 49 common frames omitted
Caused by: java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.assertParameterNamesInAnnotatedQuery(JpaQueryMethod.java:172)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.<init>(JpaQueryMethod.java:139)
	at org.springframework.data.jpa.repository.query.DefaultJpaQueryMethodFactory.build(DefaultJpaQueryMethodFactory.java:44)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:87)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 71 common frames omitted
2022-2022-05 17:05 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 4204 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 17:05 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 17:05 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 17:05 [WARN][restartedMain][o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext:591] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
2022-2022-05 17:05 [ERROR][restartedMain][o.s.b.SpringApplication:824] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollController': Unsatisfied dependency expressed through field 'employeePayrollServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.employeepayrollappspringboot.EmployeePayrollAppSpringBootApplication.main(EmployeePayrollAppSpringBootApplication.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'employeePayrollServices': Unsatisfied dependency expressed through field 'employeePayrollRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeePayrollRepo' defined in com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 39 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String)! Reason: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!; nested exception is java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1061)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:364)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:322)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:328)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 49 common frames omitted
Caused by: java.lang.IllegalStateException: Using named parameters for method public abstract java.util.List com.example.employeepayrollappspringboot.repository.EmployeePayrollRepo.findEmployeeByDepartment(java.lang.String) but parameter 'Optional[department]' not found in annotated query 'select * from employee_payroll, employee_department where emp_id = id and department = :deptarment'!
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.assertParameterNamesInAnnotatedQuery(JpaQueryMethod.java:172)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.<init>(JpaQueryMethod.java:139)
	at org.springframework.data.jpa.repository.query.DefaultJpaQueryMethodFactory.build(DefaultJpaQueryMethodFactory.java:44)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:87)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 71 common frames omitted
2022-2022-05 17:06 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 3128 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 17:06 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 17:06 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 17:07 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 17:07 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 17:07 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 7.976 seconds (JVM running for 9.514)
2022-2022-05 17:07 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 17:07 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:16] Employee Payroll DB User is root
2022-2022-05 17:08 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 2772 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 17:08 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 17:08 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 17:08 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 17:08 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 17:08 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 7.365 seconds (JVM running for 8.93)
2022-2022-05 17:08 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 17:08 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:16] Employee Payroll DB User is root
2022-2022-05 17:13 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 9116 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 17:13 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 17:13 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 17:13 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 17:13 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 17:13 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 7.979 seconds (JVM running for 9.91)
2022-2022-05 17:13 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 17:13 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:16] Employee Payroll DB User is root
2022-2022-05 17:18 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 3696 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 17:18 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 17:18 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 17:19 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 17:19 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 17:19 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 7.629 seconds (JVM running for 9.165)
2022-2022-05 17:19 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 17:19 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:16] Employee Payroll DB User is root
2022-2022-05 17:19 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:55] Starting EmployeePayrollAppSpringBootApplication using Java 17.0.1 on DESKTOP-6V1G0JA with PID 11216 (C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot\target\classes started by root in C:\Users\Admin\IdeaProjects\EmployeePayrollApp-SpringBoot)
2022-2022-05 17:19 [DEBUG][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:56] Running with Spring Boot v2.7.0, Spring v5.3.20
2022-2022-05 17:19 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:640] The following 1 profile is active: "dev"
2022-2022-05 17:19 [WARN][restartedMain][o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration:219] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-2022-05 17:19 [WARN][restartedMain][o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration:103] Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2022-2022-05 17:19 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:61] Started EmployeePayrollAppSpringBootApplication in 5.97 seconds (JVM running for 7.328)
2022-2022-05 17:19 [INFO][restartedMain][c.e.e.EmployeePayrollAppSpringBootApplication:14] Employee Payroll Application Started in DEV Environment
2022-2022-05 17:20 [DEBUG][http-nio-8080-exec-1][c.e.e.c.EmployeePayrollController:40] Employee DTO :EmployeePayrollDTO(name=Messi, salary=2000, gender=Male, joiningDate=2021-02-01, note=Goal Machine, profilePic=null, department=[HR, Sales])
2022-2022-05 17:21 [DEBUG][http-nio-8080-exec-3][c.e.e.c.EmployeePayrollController:40] Employee DTO :EmployeePayrollDTO(name=Ronaldo, salary=2000, gender=Male, joiningDate=2021-01-01, note=Goal Acheiver, profilePic=null, department=[HR, Marketing])
2022-2022-05 17:22 [WARN][http-nio-8080-exec-4][o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver:208] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String "01 March 2021": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '01 March 2021' could not be parsed at index 6; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String "01 March 2021": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '01 March 2021' could not be parsed at index 6<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 5, column: 19] (through reference chain: com.example.employeepayrollappspringboot.DTO.EmployeePayrollDTO["joiningDate"])]
2022-2022-05 17:22 [DEBUG][http-nio-8080-exec-6][c.e.e.c.EmployeePayrollController:40] Employee DTO :EmployeePayrollDTO(name=Puyol, salary=2000, gender=Male, joiningDate=2021-03-01, note=Goal Acheiver, profilePic=null, department=[Marketing])
